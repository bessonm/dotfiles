[user]
  email = besson.mael@gmail.com
  name = bessonm
  signingkey = 82E4111792A91590
[push]
  default = simple
[core]
  trustctime = false
  editor = nano
  fileMode = false
  autocrlf = input
[color]
  ui = true
[credential]
  helper = cache --timeout=3600
[merge]
  tool = vimdiff
[mergetool]
  keeptemporaries = false
  keepbackups = false
  prompt = false
  trustexitcode = false
[merge "ours"]
  driver = true
[alias]
  last = log -1 --stat
  cp = cherry-pick
  co = checkout
  cl = clone
  ci = commit
  st = status -sb
  fap = fetch --all --prune
  br = branch -vv
  unstage = reset HEAD --
  dc = diff --cached
  l = "!f() { git log -n ${1-10} --pretty=format:'%C(cyan)%G?%Creset %C(auto)%h%d %s%Creset %Cred<%an>%Creset'; }; f"
  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %Cblue<%an>%Creset' --abbrev-commit --date=relative --all
  glog =  log --graph --oneline --decorate --branches --tags --date-order --full-history
  lga = log --graph --decorate --date-order --full-history --pretty=format:'%C(yellow)%h%Creset <%C(red)%an%Creset> (%C(green)%ai%Creset)%C(auto)%d%Creset %s' --all
  lgb = log --graph --decorate --date-order --full-history --pretty=format:'%C(yellow)%h%Creset <%C(red)%an%Creset> (%C(green)%ai%Creset)%C(auto)%d%Creset %s'
  incoming = "!f() { git fetch --quiet && git log --graph --oneline --date-order --full-history ..@{upstream}; }; f"
  outgoing = "!f() { git fetch --quiet && git log --graph --oneline --date-order --full-history @{push}..; }; f"
  incoming-all = "!f() { git fetch --quiet && git for-each-ref --format='%(refname:short)' refs/heads | xargs -I {} git log --graph --oneline --decorate --date-order --full-history {}..{}@{upstream}; }; f"
  outgoing-all = "!f() { git fetch --quiet && git for-each-ref --format='%(refname:short)' refs/heads | xargs -I {} git log --graph --oneline --decorate --date-order --full-history {}@{push}..{}; }; f"
  forget = update-index --assume-unchanged
  unforget = update-index --no-assume-unchanged
  forgotten = "!f() { git ls-files -v | grep ^[a-z]; }; f"
  vimdiff = difftool --no-prompt --tool=vimdiff
  ll = ls-files -f
  ls = ls-tree --name-only HEAD
  sw = switch
  rs = restore
  swc = switch -c
  resign = "!f() { git rebase --exec 'git commit --amend --no-edit -n -S' -i $1; }; f"
  pr = "!f() { git fetch origin pull/$1/head:pr/$1 && git checkout pr/$1; }; f"
  track = "!f() { git branch --set-upstream-to ${1-origin}/${2-$(git rev-parse --abbrev-ref HEAD)}; }; f"
[rerere]
  enabled = true
[commit]
  gpgsign = true
[tag]
  forceSignAnnotated = true
